import PropTypes from 'prop-types';

export const propTypes = {
    selectedTab: PropTypes.string,
    onSetBackgroundColor: PropTypes.func,
    canvasBackgroundColor: PropTypes.string,
    canvasBackgroundImage: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.object,
      ]),
    onSetBackgroundImage: PropTypes.func,
    shapeStrokeColor: PropTypes.string,
    shapeStrokeWidth: PropTypes.number,
    shapeFillColor: PropTypes.string,
    shapeOpacity: PropTypes.number,
    onChangeShapeStrokeColor: PropTypes.func,
    onChangeShapeStrokeWidth: PropTypes.func,
    onChangeShapeFill: PropTypes.func,
    onChangeShapeOpacity: PropTypes.func,
    selectedElement: PropTypes.object,
    onChangeBackgroundImageOpacity: PropTypes.func,
    backgroundImageOpacity: PropTypes.number,
    imageStrokeWidth: PropTypes.number,
    imageStrokeColor: PropTypes.string,
    imageOpacity: PropTypes.number,
    onChangeImageStrokeWidth: PropTypes.func,
    onChangeImageStrokeColor: PropTypes.func,
    onChangeImageOpacity: PropTypes.func,
    qrStrokeWidth: PropTypes.number,
    qrStrokeColor: PropTypes.string,
    qrOpacity: PropTypes.number,
    onChangeQrStrokeWidth: PropTypes.func,
    onChangeQrStrokeColor: PropTypes.func,
    onChangeQrOpacity: PropTypes.func,
    defaultTextProps: PropTypes.object,
    onChangeTextProperty: PropTypes.func,
    onSetPageSize: PropTypes.func,
    selectedPageSize: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.object,
      ]),
    translation: PropTypes.object,
    uploadImageCallBack: PropTypes.func,
    setLoadingUploadImage: PropTypes.func,
    cuttingGuideStroke: PropTypes.number,
    cuttingGuideStrokeColor: PropTypes.string,
    onChangeCuttingGuideProp: PropTypes.func,
};
