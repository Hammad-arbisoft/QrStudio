import PropTypes from 'prop-types';

export const propTypes = {
    selectedTab: PropTypes.string,
    languageLocale: PropTypes.string,
    title: PropTypes.string,
    zoomPercentage: PropTypes.number,
    onChangeZoomPercentage: PropTypes.func,
    editorHeight: PropTypes.number,
    editorWidth: PropTypes.number,
    onSetBackgroundColor: PropTypes.func,
    elements: PropTypes.array,
    history: PropTypes.array,
    redoStack: PropTypes.array,
    onSetBackgroundImage: PropTypes.func,
    onUndo: PropTypes.func,
    onRedo: PropTypes.func,
    shapeStrokeColor: PropTypes.string,
    shapeStrokeWidth: PropTypes.number,
    shapeFillColor: PropTypes.string,
    onChangeShapeStrokeColor: PropTypes.func,
    onChangeShapeStrokeWidth: PropTypes.func,
    onChangeShapeFill: PropTypes.func,
    shapeOpacity: PropTypes.number,
    onChangeShapeOpacity: PropTypes.func,
    selectedElement: PropTypes.object,
    onSelectElement: PropTypes.func,
    stageRef: PropTypes.object,
    saveHistory: PropTypes.func,
    onChangeBackgroundImageOpacity: PropTypes.func,
    backgroundImageOpacity: PropTypes.number,
    onDeleteSelectedElement: PropTypes.func,
    onCopySelectedElement: PropTypes.func,
    onToggleLockElement: PropTypes.func,
    bringSelectedElementToFront: PropTypes.func,
    sendSelectedElementToBack: PropTypes.func,
    imageStrokeWidth: PropTypes.number,
    imageStrokeColor: PropTypes.string,
    imageOpacity: PropTypes.number,
    onChangeImageStrokeWidth: PropTypes.func,
    onChangeImageStrokeColor: PropTypes.func,
    onChangeImageOpacity: PropTypes.func,
    qrStrokeWidth: PropTypes.number,
    qrStrokeColor: PropTypes.string,
    qrOpacity: PropTypes.number,
    onChangeQrStrokeWidth: PropTypes.func,
    onChangeQrStrokeColor: PropTypes.func,
    onChangeQrOpacity: PropTypes.func,
    defaultTextProps: PropTypes.object,
    onChangeTextProperty: PropTypes.func,
    onSetPageSize: PropTypes.func,
    selectedPageSize: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.object,
      ]),
    loadingImages: PropTypes.bool,
    loadingFonts: PropTypes.bool,
    uploadImageCallBack: PropTypes.func,
    setLoadingUploadImage: PropTypes.func,
    cuttingGuideStroke: PropTypes.number,
    cuttingGuideStrokeColor: PropTypes.string,
    onChangeCuttingGuideProp: PropTypes.func,
};
